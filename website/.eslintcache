[{"/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/App.js":"1","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/index.js":"2","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/reducers/index.js":"3","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/actions/index.js":"4","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/user-view/MenuItemModal.js":"5","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/user-view/NavBar.js":"6","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/user-view/CurrentMenu.js":"7","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/user-view/Inquiry.js":"8","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/user-view/OrderCard.js":"9","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/user-view/Home.js":"10","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/user-view/ImageShowcase.js":"11","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/admin-view/Login.js":"12","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/actions/customer-actions.js":"13","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/actions/admin-actions.js":"14","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/reducers/admin-reducer.js":"15","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/admin-view/AdminDash.js":"16","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/firebase/index.js":"17","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/user-view/Checkout.js":"18","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/reducers/customer-reducer.js":"19"},{"size":641,"mtime":1607482610624,"results":"20","hashOfConfig":"21"},{"size":512,"mtime":1607132741530,"results":"22","hashOfConfig":"21"},{"size":184,"mtime":1607633777483,"results":"23","hashOfConfig":"21"},{"size":1250,"mtime":1607634834759,"results":"24","hashOfConfig":"21"},{"size":4702,"mtime":1607217177364,"results":"25","hashOfConfig":"21"},{"size":1595,"mtime":1607217188775,"results":"26","hashOfConfig":"21"},{"size":7331,"mtime":1607217154154,"results":"27","hashOfConfig":"21"},{"size":3592,"mtime":1607115451667,"results":"28","hashOfConfig":"21"},{"size":3129,"mtime":1607635753020,"results":"29","hashOfConfig":"21"},{"size":1465,"mtime":1607482373156,"results":"30","hashOfConfig":"21"},{"size":1497,"mtime":1607115553064,"results":"31","hashOfConfig":"21"},{"size":2575,"mtime":1607217539031,"results":"32","hashOfConfig":"21"},{"size":2384,"mtime":1607634743312,"results":"33","hashOfConfig":"21"},{"size":534,"mtime":1607237970980,"results":"34","hashOfConfig":"21"},{"size":611,"mtime":1607217599471,"results":"35","hashOfConfig":"21"},{"size":13366,"mtime":1607463664673,"results":"36","hashOfConfig":"21"},{"size":539,"mtime":1607461913318,"results":"37","hashOfConfig":"21"},{"size":10376,"mtime":1607635163057,"results":"38","hashOfConfig":"21"},{"size":2818,"mtime":1607635584400,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11jfuf4",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/App.js",[],"/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/index.js",[],["83","84"],"/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/reducers/index.js",[],"/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/actions/index.js",[],"/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/user-view/MenuItemModal.js",["85","86"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CurrencyFormatter from \"currencyformatter.js\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport { connect } from \"react-redux\";\n\n// action imports\nimport { addItemToOrder, openOrderCard, updateOrder } from \"../../actions\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      position: 'relative',\n    //   top: '50%',\n    //   left: '50%',\n      width: 500,\n      height: '85vh',\n      minHeight: '30vh',\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      outline: 'none'\n    //   padding: theme.spacing(2, 4, 3),\n    },\n  }));\n\n  const MenuItemModal = props => {\n    const classes = useStyles();\n\n    const modalStyle = {\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)'\n    }\n\n    // holds value for count of menu item\n    const [count, setCount] = useState(1);\n\n    // holds value for selected menu item to add to order\n    const [itemToAdd, setItemToAdd] = useState({});\n\n    // increases (menu item) count by 1\n    const increment = () => {\n        setCount(count + 1);\n    }\n\n    // decreases (menu item) count by 1\n    const decrement = () => {\n        if (count === 1) {\n            setCount(1)\n        } else {\n            setCount(count - 1);\n        }\n    }\n\n    // closes modal and resets (menu item) count to 1\n    const closeAndReset = () => {\n        props.closeModal();\n        setCount(1);\n    }\n\n    const addToOrder = () => {\n        // if item is already in order, an update is performed based on new specifications\n        if (props.order.some(el => itemToAdd.id === el.id)) {\n            props.updateOrder(itemToAdd);\n        // if item is not in order, it is added to order\n        } else {\n            props.addItemToOrder(itemToAdd);\n        }\n        props.openOrderCard();\n        props.closeModal();\n        setCount(1);\n        window.scroll({\n            top: 0, \n            left: 0, \n            behavior: 'smooth'\n          });\n    };\n\n    useEffect(() => {\n        setItemToAdd({\n            id: props.menuItem.id,\n            item: props.menuItem.name,\n            count: count,\n            price: props.menuItem.price,\n            total: props.menuItem.price * count\n        });\n    }, [count, props.openMode])\n\n    return (\n        <div>\n        <Modal \n            open={props.openMode} \n            onClose={closeAndReset} \n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <object data={props.menuItem.image} alt=\"pic of menu item\" style={{ width: '100%', height: '45%', objectFit: 'cover', marginBottom: '3%' }}/>\n                <h1 style={{ fontWeight: 'bold', marginBottom: '15%', paddingLeft: '2%' }}>{props.menuItem.name}</h1>\n                <p>{props.menuItem.description}</p>\n                <label style={{ width: '100%', background: 'lightgrey', height: '5%', paddingTop: 'auto', paddingBottom: 'auto', paddingLeft: '2%' }}>Special Instructions</label>\n                <input style={{ width: '100%', border: 'none', height: '10%', paddingTop: '8%', paddingBottom: '16%', borderBottom: '1px solid lightgrey', marginBottom: '4%', paddingLeft: '2%' }} name=\"instructions\" type=\"text\" placeholder=\"Leave a note for the kitchen\"/>\n                <div style={{ display: 'flex', width: '95%', marginLeft: 'auto', marginRight: 'auto' }}>\n                    <AddCircleIcon style={{ fontSize: 30, paddingTop: 'auto', paddingBottom: 'auto', marginTop: 'auto', marginBottom: 'auto' }} onClick={increment} />   \n                    <p style={{ margin: 'auto 2%' }}>{count}</p>\n                    <RemoveCircleIcon style={{ fontSize: 30, marginRight: '3%', marginTop: 'auto', marginBottom: 'auto' }} onClick={decrement} />\n                    <button \n                        style={{ width: '80%', color: 'white', background: 'black', padding: '12px 0' }} \n                        onClick={addToOrder}>Add {count} to Order {CurrencyFormatter.format((props.menuItem.price * count), { currency: 'USD' })}\n                    </button>\n                </div>\n            </div>\n        </Modal>\n        </div>\n    )\n  }\n\n  const mapStateToProps = state => {\n      return {\n          order: state.customer.order\n      }\n  }\n\n  export default connect(mapStateToProps, { addItemToOrder, openOrderCard, updateOrder })(MenuItemModal)","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/user-view/NavBar.js",["87","88","89"],"import React from \"react\";\nimport logo from \"../../assets/dd-logo.jpg\";\nimport { Link } from \"react-router-dom\";\nimport { FaFacebook, FaInstagram, FaShoppingBasket } from \"react-icons/fa\";\nimport { HiOutlineMail } from \"react-icons/hi\";\nimport \"../../styles/NavBar.scss\";\nimport { connect } from \"react-redux\";\n\nimport { openOrderCard } from \"../../actions\";\n\nconst NavBar = props => {\n    return (\n        <div className=\"navbar\">\n            <img src={logo} alt=\"Dinner and Dessert logo\" className=\"nav-logo\" />\n            <div className=\"nav-link-container\">\n                <Link to=\"/\" className=\"nav-link\">Home</Link>\n                <Link to=\"/menus\" className=\"nav-link\">Menus</Link>\n                <Link to=\"/contact\" className=\"nav-link\">Contact</Link>\n            </div>\n            <div className=\"nav-social-icons-container\">\n                <a href=\"https://www.instagram.com/dinneranddessertllc/\" target=\"_blank\" className=\"nav-social-link\"><FaInstagram /></a>\n                <a href=\"https://www.facebook.com/kendra.carpenter.7503\" target=\"_blank\" className=\"nav-social-link\"><FaFacebook /></a>\n                <a href=\"https://www.google.com\" target=\"_blank\" className=\"nav-social-link\"><HiOutlineMail /></a>\n            </div>\n            {props.order.length > 0 && <div className=\"nav-order-icon\" onClick={props.openOrderCard} >\n                <FaShoppingBasket />\n            </div>}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        order: state.customer.order\n    }\n}\nexport default connect(mapStateToProps, { openOrderCard })(NavBar);\n  \n","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/user-view/CurrentMenu.js",["90","91","92"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport \"../../styles/CurrentMenu.scss\";\nimport CurrencyFormatter from \"currencyformatter.js\";\nimport MenuItemModal from \"./MenuItemModal\";\nimport OrderCard from \"./OrderCard\";\nimport { connect } from \"react-redux\";\n\nconst CurrentMenu = props => {\n    const [menu, setMenu] = useState({\n        entrees: [],\n        sides: [],\n        dessert: [],\n        extras: []\n    })\n\n    // user clicks on card for particular menu item\n    // that menu item is captured in state\n    // menu item state used to show that menu item when MenuItemModal is opened \n    const [menuItem, setMenuItem] = useState({\n        id: '',\n        name: '',\n        description: '',\n        image: '',\n        price: ''\n    })\n\n    // determines whether or not MenuItemModal component is open\n    const [openMode, setOpenMode] = useState(false);\n\n    // sets modalOpen to true, thus openinng the menu item modal\n    const openModal = () => {\n        setOpenMode(true);\n    } \n\n     // sets modalOpen to false, thus closing the menu item modal\n     const closeModal = () => {\n        setOpenMode(false);\n    }\n\n\n\n    useEffect(() => {\n        axios\n        .get('http://localhost:5000/api/menu/current')\n        .then(res => {\n            // console.log(res);\n            setMenu({ \n                entrees: res.data.filter(item => item.category === 'entree'),\n                sides: res.data.filter(item => item.category === 'side'),\n                extras: res.data.filter(item => item.category === 'extra'),\n                dessert: res.data.filter(item => item.dinner_or_dessert === 'dessert')\n            });\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }, [])\n\n    // just to see menuItem being set\n    // will take out\n    useEffect(() => {\n        console.log('menu item: ', menuItem)\n    }, [menuItem]);\n\n    return (\n        <div className=\"cur-menu\">\n            <h1 className=\"cur-menu-header\">Today's Menu</h1>\n            {menu.entrees.length > 0 && (\n                <div className=\"cur-menu-category-container\">\n                    <h3 className=\"cur-menu-label\">Entrees</h3>\n                        <Grid container spacing={2}>\n                            {menu.entrees.map(item => (\n                                    <Grid item xs={3} onClick={() => {\n                                        setMenuItem({ id: item.id, name: item.item, description: item.description, image: item.image, price: item.price })\n                                    }}>\n                                        <Card className=\"cur-menu-card\" onClick={openModal}>\n                                            <div className=\"cur-menu-deets-cont\">\n                                                <p className=\"cur-menu-item-name\">{item.item}</p>\n                                                <p className=\"cur-menu-item-description\">{item.description}</p>\n                                                <p className=\"cur-menu-item-price\">{CurrencyFormatter.format(item.price, { currency: 'USD' })}</p>\n                                            </div>\n                                            <div className=\"cur-menu-item-img\">\n                                                <object data={item.image} alt=\"pic of menu item\" />\n                                            </div>\n                                        </Card>\n                                    </Grid>\n                            ))}\n                        </Grid>\n                        <MenuItemModal openMode={openMode} closeModal={closeModal} menuItem={menuItem} />\n                </div>\n            )}\n\n            {menu.sides.length > 0 && (\n                <div className=\"cur-menu-category-container\">\n                    <h3 className=\"cur-menu-label\">Sides</h3>\n                        <Grid container spacing={2}>\n                            {menu.sides.map(item => (\n                                    <Grid item xs={3} onClick={() => {\n                                        setMenuItem({ id: item.id, name: item.item, description: item.description, image: item.image, price: item.price })\n                                    }}>\n                                        <Card className=\"cur-menu-card\" onClick={openModal}>\n                                            <div className=\"cur-menu-deets-cont\">\n                                                <p className=\"cur-menu-item-name\">{item.item}</p>\n                                                <p className=\"cur-menu-item-description\">{item.description}</p>\n                                                <p className=\"cur-menu-item-price\">{CurrencyFormatter.format(item.price, { currency: 'USD' })}</p>\n                                            </div>\n                                            <div className=\"cur-menu-item-img\">\n                                                <object data={item.image} alt=\"pic of menu item\" />\n                                            </div>\n                                        </Card>\n                                    </Grid>\n                            ))}\n                        </Grid>\n                        <MenuItemModal openMode={openMode} closeModal={closeModal} menuItem={menuItem} />\n                </div>\n            )}\n\n            {menu.dessert.length > 0 && (\n                <div className=\"cur-menu-category-container\">\n                    <h3 className=\"cur-menu-label\">Dessert</h3>\n                        <Grid container spacing={2}>\n                            {menu.dessert.map(item => (\n                                    <Grid item xs={3} onClick={() => {\n                                        setMenuItem({ id: item.id, name: item.item, description: item.description, image: item.image, price: item.price })\n                                    }}>\n                                        <Card className=\"cur-menu-card\" onClick={openModal}>\n                                            <div className=\"cur-menu-deets-cont\">\n                                                <p className=\"cur-menu-item-name\">{item.item}</p>\n                                                <p className=\"cur-menu-item-description\">{item.description}</p>\n                                                <p className=\"cur-menu-item-price\">{CurrencyFormatter.format(item.price, { currency: 'USD' })}</p>\n                                            </div>\n                                            <div className=\"cur-menu-item-img\">\n                                                <object data={item.image} alt=\"pic of menu item\" />\n                                            </div>\n                                        </Card>\n                                    </Grid>\n                            ))}\n                        </Grid>\n                        <MenuItemModal openMode={openMode} closeModal={closeModal} menuItem={menuItem} />\n                </div>\n            )}\n\n            {props.orderCardOpen && <OrderCard history={props.history} />}\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        orderCardOpen: state.customer.orderCardOpen,\n    }\n}\n\nexport default connect(mapStateToProps, {})(CurrentMenu);","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/user-view/Inquiry.js",[],"/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/user-view/OrderCard.js",[],"/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/user-view/Home.js",[],"/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/user-view/ImageShowcase.js",[],"/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/admin-view/Login.js",["93"],"import React, { useState, useEffect } from \"react\";\nimport \"../../styles/Login.scss\";\nimport { connect } from \"react-redux\";\n\nimport { adminLogin } from \"../../actions\";\n\nconst Login = (props) => {\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const handleInputChange = (e) => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"credentials: \", credentials);\n  }, [credentials]);\n\n  const handleLoginSubmit = (e) => {\n    e.preventDefault();\n    props.adminLogin(credentials);\n  };\n\n  useEffect(() => {\n    if (props.adminAccess && !props.isLoading) {\n        props.history.push('/admin');\n    }\n\n    console.log('this is running');\n    console.log('admin_access: ', props.adminAccess);\n  }, [props.adminAccess])\n\n  return (\n    <div className=\"login-page\">\n      <h1 className=\"login-headline\">Admin Access</h1>\n      <h5 className=\"login-sub\">Hello! Sign in with your username or email</h5>\n      <form style={{ width: \"100%\" }}>\n        <div className=\"login-cred-div\">\n          <div className=\"login-cred-input-div\">\n            <label htmlFor=\"name\">Username</label>\n            <input\n              className=\"login-cred-input\"\n              type=\"text\"\n              name=\"username\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"login-cred-input-div\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              className=\"login-cred-input\"\n              type=\"text\"\n              name=\"password\"\n              onChange={handleInputChange}\n            />\n          </div>\n        </div>\n        <div className=\"login-other-div\">\n          <div className=\"login-remember-me-div\">\n            <input\n              className=\"login-remember-me-checkbox\"\n              type=\"checkbox\"\n              name=\"remember-me\"\n            />\n            <label htmlFor=\"remember-me\">Remember me</label>\n          </div>\n          <p className=\"login-forgot-p\">Forgot password?</p>\n        </div>\n        <div className=\"login-submit-btn-div\">\n          <button\n            className=\"login-submit-btn\"\n            type=\"submit\"\n            onClick={handleLoginSubmit}\n          >\n            SIGN IN\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    adminAccess: state.admin.admin_access,\n    isLoading: state.isLoading\n  };\n};\n\nexport default connect(mapStateToProps, { adminLogin })(Login);\n","/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/actions/customer-actions.js",[],"/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/actions/admin-actions.js",[],"/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/reducers/admin-reducer.js",[],"/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/admin-view/AdminDash.js",["94","95","96","97","98","99","100","101","102","103","104"],"/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/firebase/index.js",[],"/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/components/user-view/Checkout.js",[],"/Users/jevon/Documents/Side Projects/Dinner-And-Dessert-Website/website/src/reducers/customer-reducer.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":90,"column":8,"nodeType":"111","endLine":90,"endColumn":31,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":101,"column":17,"nodeType":"115","endLine":101,"endColumn":158},{"ruleId":"116","severity":1,"message":"117","line":21,"column":74,"nodeType":"118","endLine":21,"endColumn":89},{"ruleId":"116","severity":1,"message":"117","line":22,"column":74,"nodeType":"118","endLine":22,"endColumn":89},{"ruleId":"116","severity":1,"message":"117","line":23,"column":50,"nodeType":"118","endLine":23,"endColumn":65},{"ruleId":"113","severity":1,"message":"114","line":86,"column":49,"nodeType":"115","endLine":86,"endColumn":100},{"ruleId":"113","severity":1,"message":"114","line":111,"column":49,"nodeType":"115","endLine":111,"endColumn":100},{"ruleId":"113","severity":1,"message":"114","line":136,"column":49,"nodeType":"115","endLine":136,"endColumn":100},{"ruleId":"109","severity":1,"message":"119","line":36,"column":6,"nodeType":"111","endLine":36,"endColumn":25,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":19,"column":10,"nodeType":"123","messageId":"124","endLine":19,"endColumn":24},{"ruleId":"109","severity":1,"message":"125","line":87,"column":6,"nodeType":"111","endLine":87,"endColumn":20,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":142,"column":48,"nodeType":"129","messageId":"130","endLine":142,"endColumn":50},{"ruleId":"113","severity":1,"message":"114","line":165,"column":23,"nodeType":"115","endLine":165,"endColumn":74},{"ruleId":"113","severity":1,"message":"114","line":168,"column":23,"nodeType":"115","endLine":171,"endColumn":25},{"ruleId":"127","severity":1,"message":"128","line":223,"column":48,"nodeType":"129","messageId":"130","endLine":223,"endColumn":50},{"ruleId":"113","severity":1,"message":"114","line":243,"column":23,"nodeType":"115","endLine":243,"endColumn":74},{"ruleId":"113","severity":1,"message":"114","line":246,"column":23,"nodeType":"115","endLine":249,"endColumn":25},{"ruleId":"127","severity":1,"message":"128","line":301,"column":48,"nodeType":"129","messageId":"130","endLine":301,"endColumn":50},{"ruleId":"113","severity":1,"message":"114","line":321,"column":23,"nodeType":"115","endLine":321,"endColumn":74},{"ruleId":"113","severity":1,"message":"114","line":324,"column":23,"nodeType":"115","endLine":327,"endColumn":25},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.menuItem.id', 'props.menuItem.name', and 'props.menuItem.price'. Either include them or remove the dependency array. If 'setItemToAdd' needs the current value of 'props.menuItem.id', you can also switch to useReducer instead of useState and read 'props.menuItem.id' in the reducer.","ArrayExpression",["133"],"jsx-a11y/alt-text","Embedded <object> elements must have alternative text by providing inner text, aria-label or aria-labelledby props.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has missing dependencies: 'props.history' and 'props.isLoading'. Either include them or remove the dependency array.",["134"],"no-unused-vars","'uploadProgress' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'imageToChange'. Either include it or remove the dependency array.",["135"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [count, props.menuItem.id, props.menuItem.name, props.menuItem.price, props.openMode]",{"range":"142","text":"143"},"Update the dependencies array to be: [props.adminAccess, props.history, props.isLoading]",{"range":"144","text":"145"},"Update the dependencies array to be: [imageToChange, newItemImage]",{"range":"146","text":"147"},[2514,2537],"[count, props.menuItem.id, props.menuItem.name, props.menuItem.price, props.openMode]",[825,844],"[props.adminAccess, props.history, props.isLoading]",[2571,2585],"[imageToChange, newItemImage]"]